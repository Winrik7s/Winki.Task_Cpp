// Winki.Task_Cpp.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>

using namespace std;

int main()
{
    system("chcp 1251 > nul");

    int number = 0;
    
    cout << "Введите четырехзначное число: ";
    cin >> number;

    if(number < 1000 || number > 9999)
    {
        cout << "Ошибка! Введите четырехзначное число!" << endl;
        return 1;
    }

    cout << endl;

    //Вариант А:
    int num1 = number / 1000;
    int num2 = (number % 1000) / 100;
    
    int num3 = (number % 100) / 10;
    int num4 = number % 10;

    int sum1 = num1 + num2;
    int sum2 = num3 + num3;

    if(sum1 == sum2)
    {
        cout << "Сумма двух первых цифр числа " << number << " равна сумме последних его цифр" << endl;
    }
    else
    {
        cout << "Сумма двух первых цифр числа " << number << " не равна сумме последних его цифр" << endl;
    }

    cout << endl;

    //Вариант Б:
    int sum = num1 + num2 + num3 + num4;

    if(sum % 3 == 0)
    {
        cout << "Сумма цифр числа " << number << " кратна трем" << endl;
    }
    else
    {
        cout << "Сумма цифр числа " << number << " не кратна трем" << endl;
    }

    cout << endl;

    //Вариант В:
    int mul = num1 * num2 * num3 * num4;

    if (mul % 4 == 0)
    {
        cout << "Произведение цифр числа " << number << " кратна четырем" << endl;
    }
    else
    {
        cout << "Произведение цифр числа " << number << " не кратна четырем" << endl;
    }

    cout << endl;

    //Вариант Г:
    int userNumber = 0;

    cout << "Введите число: ";
    cin >> userNumber;

    cout << endl;

    if (mul % userNumber == 0)
    {
        cout << "Произведение цифр числа " << number << " кратна " << userNumber << endl;
    }
    else
    {
        cout << "Произведение цифр числа " << number << " не кратна " << userNumber << endl;
    }

    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
